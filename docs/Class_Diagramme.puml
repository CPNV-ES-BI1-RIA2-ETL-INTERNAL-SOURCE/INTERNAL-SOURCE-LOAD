@startuml

    ' Remove color coding and use packages instead
    ' Framework package
    package "Framework Components" {
        class LoadController {
            - jsonTransformerService : IJsonTransformerService
            - dataPersistenceService : IDataPersistenceService
            - appSettings : AppSettings
            + LoadController(jsonTransformerService : IJsonTransformerService, dataPersistenceService : IDataPersistenceService, appSettings : AppSettings)
            + Post(jsonData : JsonElement) : ActionResult
        }

        class TableNameAttribute {
            + TableName : string
            + TableNameAttribute(tableName : string)
        }

        class AppSettings {
            + DefaultModel : string
        }
    }

    ' Domain Model package
    package "Domain Model" {
        class Departure {
            + DepartureStationName : string 
            + DestinationStationName : string 
            + ViaStationNames : string[] 
            + DepartureTime : date
            + Train : Train
            + Platform : string
            + Sector : string
            + TrainStationID : integer
            + TrainID : integer
        }

        class Train {
            + G : string
            + L : string
        }

        class TrainStation {
            + Name : string
            + Departures : Departure[]
        }

        class PersistenceResult {
            + Success : boolean
            + Message : string
            + SkippedDuplicates : integer
            + Errors : string[]
        }
    }

    ' Services package
    package "Application Services" {
        interface "IDatabaseExecutor" as IDatabaseExecutor <<interface>> {
            + Execute(sqlQuery : string) : void
            + ExecuteAndReturnId(sqlQuery : string) : number
        }

        class MariaDbExecutor {
            - connectionString : string
            + MariaDbExecutor(connectionString : string)
            + Execute(sqlQuery : string) : void
            + ExecuteAndReturnId(sqlQuery : string) : number
        }

        interface "IJsonToModelTransformer<T>" as IJsonToModelTransformer <<interface>> {
            + Transform(jsonData : JsonElement) : T
        }

        class JsonToModelTransformer<T> {
            + Transform(jsonData : JsonElement) : T
        }

        interface "IJsonTransformerService" as IJsonTransformerService <<interface>> {
            + TransformJsonToModel(jsonData : JsonElement, modelTypeName : string) : object
            + ResolveModelType(modelTypeName : string) : Type
        }

        class JsonTransformerService {
            - serviceProvider : ServiceProvider
            + JsonTransformerService(serviceProvider : ServiceProvider)
            + TransformJsonToModel(jsonData : JsonElement, modelTypeName : string) : object
            + ResolveModelType(modelTypeName : string) : Type
        }

        interface "IDataPersistenceService" as IDataPersistenceService <<interface>> {
            + PersistData(model : object, modelTypeName : string) : PersistenceResult
            + IsDuplicateKeyError(ex : Exception) : boolean
        }

        class DataPersistenceService {
            - sqlExecutor : IDatabaseExecutor
            + DataPersistenceService(sqlExecutor : IDatabaseExecutor)
            + PersistData(model : object, modelTypeName : string) : PersistenceResult
            + IsDuplicateKeyError(ex : Exception) : boolean
        }

        class SqlInsertGenerator {
            + {static} GenerateInsertQueries(tableName : string, data : object) : Tuple[]
        }
    }

    ' Relationships
    TrainStation --o Departure
    Departure --o Train
    MariaDbExecutor --|> IDatabaseExecutor
    JsonTransformerService --|> IJsonTransformerService
    DataPersistenceService --|> IDataPersistenceService
    JsonToModelTransformer --|> IJsonToModelTransformer
    
    LoadController ..> IJsonTransformerService
    LoadController ..> IDataPersistenceService
    LoadController ..> AppSettings
    
    DataPersistenceService ..> IDatabaseExecutor
    DataPersistenceService ..> SqlInsertGenerator
    DataPersistenceService ..> PersistenceResult
    
    JsonTransformerService ..> IJsonToModelTransformer
    
    TableNameAttribute *-- Departure
    TableNameAttribute *-- Train
    TableNameAttribute *-- TrainStation

@enduml
